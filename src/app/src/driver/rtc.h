#ifndef __RTC_H
#define __RTC_H

//*********文件包含************
#include "stm32f2xx.h"
#include "stm32f2xx_lib.h"

//*********宏定义**************
//时间结构体类型
typedef struct
	{
		s8	year;	//年:00~99
		s8	month;	//月:1~12
		s8	day;	//日:1~31
		s8	hour;	//时:0~23
		s8	min;	//分:0~59
		s8	sec;	//秒:0~59
	}TIME_T;

#define START_YEAR		13//行标检测时需要放开，否则影响校时
#define END_YEAR		99

//时间宏定义
#define MIN_SECOND		60
//#define HOUR_SECOND	        (60*60)
//#define DAY_SECOND 		(24*60*60)
//#define YEAR_SECOND 	        (365*24*60*60)
#define HOUR_SECOND	        0xE10
#define DAY_SECOND          0x15180
#define YEAR_SECOND 	        0x1E13380
#define LEAP_YEAR       	1

//**********函数声明**********
void SetRtc(TIME_T *tt);
void ReadRtc(void);
/*********************************************************************
//函数名称	:Gmtime
//功能		:把32位无符号的统一计数值转换成结构体类型时间
//输入		:指向TIME_T类型的指针，计数值
//输出		:指向TIME_T类型的指针
//使用资源	:
//全局变量	:   
//调用函数	:
//中断资源	:  
//返回		:
//备注		:
*********************************************************************/
void Gmtime(TIME_T *tt, u32 counter);
/*********************************************************************
//函数名称	:ConverseGmtime
//功能		:把结构体类型时间转换成32位无符号的统一计数值
//输入		:TIME_T 结构体类型时间
//输出		:
//使用资源	:
//全局变量	:   
//调用函数	:
//中断资源	:  
//返回		:32位无符号的统一计数值
//备注		:
*********************************************************************/
u32 ConverseGmtime(TIME_T *tt);
/*********************************************************************
//函数名称	:RTC_GetCounter
//功能		:获取RTC时间（以TimeID形式）
//输入		:
//输出		:
//使用资源	:
//全局变量	:   
//调用函数	:
//中断资源	:       
//备注:
*********************************************************************/
u32  RTC_GetCounter(void);
/*********************************************************************
//函数名称	:RTC_GetCurTime
//功能		:获取当前时间
//输入		:
//输出		:
//使用资源	:
//全局变量	:   
//调用函数	:
//中断资源	:       
//备注:
*********************************************************************/
void RTC_GetCurTime(TIME_T *tt);
u8 LeapYear(u8 year);
u16 YearDay(u8 yy,s8 mm,s8 dd);
void RTC_Config(void);
void InitRtc(void);
ErrorStatus CheckTimeStruct(TIME_T *tt);
void Num2NumStr(u32 Num, u8 *NumStr);
/*************************************************************
** 函数名称: RTC_CacWeekDay
** 功能描述: 计算指定日期是星期几
** 入口参数: year年(2000为起始),moonth月,day日
** 出口参数: 
** 返回参数: 星期几,1～ 7表示星期一 ～ 星期天(与stm32一致)
** 全局变量: 无
** 调用模块: 无
*************************************************************/
unsigned char RTC_CacWeekDay(unsigned char year,unsigned char moonth,unsigned char day);
/*************************************************************
** 函数名称: RTC_GetCurWeekDay
** 功能描述: 取得当前是期几
** 入口参数: 
** 出口参数: 
** 返回参数: 星期几,1～ 7表示星期一 ～ 星期天
** 全局变量: 无
** 调用模块: 无
*************************************************************/
unsigned char RTC_GetCurWeekDay(void);

#endif


